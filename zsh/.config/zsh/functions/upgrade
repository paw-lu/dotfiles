_upgrade_announcement() {
    # Print out an announcement that the package manager is upgrading
    # Args:
    #   name: The name of the package manager updating its packages
    #   icon (optional): An emoji to symbolize the package manager
    local name="$1"
    local icon="$2"
    echo
    echo "${icon} Upgrading ${name} packages"
}

_upgrade_conda_env() {
    # Upgrade all dependencies in a conda environment
    # Requires Python yq to be installed
    # Args:
    #     conda_env: The name of the conda environment to upgrade
    local conda_env="$1"
    # Update conda installed dependencies
    conda update --name="${conda_env}" --all --yes
    # Update pip installed dependencies
    # Exports conda environment, parses environment for pip
    # dependencies, strips the versions, and passes on to pip for
    # upgrading
    conda run --name="${conda_env}" conda env export | yq -r ".dependencies[-1].pip[]" | sed "s/==.*//" | xargs conda run --name="${conda_env}" python -m pip install --upgrade
    # Update JupyterLab extensions
    conda run --name="${conda_env}" jupyter labextension update --all
}

_status() {
    # Check if command succeeds
    # Args:
    #   name: The name of the package manager updating its packages
    #   ICON (optional): An emoji to symbolize the package manager
    local name="$1"
    echo
    echo "$name"
    echo "--------"
    if "$@"; then
        echo
        echo "✅ ${name} PASS"
    else
        echo
        echo "❌ ${name} FAIL"
    fi
}

if [ "$#" -gt 0 ]; then
    echo "❓ Too many parameters"
    echo "Expected no parameters"
    echo
    echo "Usage: upgarde"
    return 1
else
    # Update packages
    _upgrade_announcement "tealdeer" "🦌"
    local TLDR="$(_status tldr --update)"
    _upgrade_announcement "Homebrew" "🍺"
    local BREW="$(_status brew upgrade)"
    _upgrade_announcement "pipx" "🆇"
    local PIPX="$(_status pipx upgrade-all)"
    _upgrade_announcement "poetry" "📝"
    local POETRY="$(_status poetry self update)"
    _upgrade_announcement "pip" "📦"
    local PIP="$(_status pip install --upgrade pip)"
    _upgrade_announcement "conda" "🐍"
    _upgrade_announcement "notebook" "📓"
    # shellcheck disable=SC2168
    local notebook
    notebook="$(_status _upgrade_conda_env notebook)"
    _upgrade_announcement "Oh My Zsh" "🅉"
    local OMZ="$(_status upgrade_oh_my_zsh)"
    echo
    echo
    echo "Status"
    echo "=============================================="
    for output in $TLDR $BREW $PIPX $POETRY $PIP $CONDA $OMZ; do
        echo
        echo "$output"
    done
fi
