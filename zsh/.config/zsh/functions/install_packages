# Download all packages
# Mostly used for setting up a new machine
# Requirements:
#   Homebrew and pipx are installed
#   Dotfiles have been added to system
#   jq and yq are installed (via Homebrew)

# Homebrew packages
cd ~/.dotfiles/packages || exit
brew bundle install

# pipx packages
for package in $(yq -r '.install[]' ~/.dotfiles/packages/pipx.yml); do
    pipx install "$package"
done

# cargo packages
for package in $(yq -r '.install[]' ~/.dotfiles/packages/cargo.yml); do
    cargo install "$package"
done


# pipx inject app
# mostly used to set up jupyter
for environment in $(yq -r '.add | keys[]' ~/.dotfiles/packages/pipx.yml); do
    # pipx inject --include-apps $environment "$(yq )"
    yq -r ".add.${environment}" ~/.dotfiles/packages/pipx.yml | xargs pipx inject --include-apps "${environment}"
done

# pipx inject
for environment in $(yq -r '.inject | keys[]' ~/.dotfiles/packages/pipx.yml); do
    # pipx inject $environment "$(yq )"
    yq -r ".inject.${environment}" ~/.dotfiles/packages/pipx.yml | xargs pipx inject "${environment}"
done

# git
for package in $(yq -r 'keys[]' ~/.dotfiles/packages/git.yml); do
    # shellcheck disable=SC2168
    local repo
    repo=$(yq -r ".\"${package}\".repo" ~/.dotfiles/packages/git.yml)
    # shellcheck disable=SC2168
    local directory
    directory=$(yq -r ".\"${package}\".directory" ~/.dotfiles/packages/git.yml)
    git clone "${repo}" "${HOME}${directory}"
done

# Jupyter setup
# Install JupyterLab extensions
yq -r '.labextension[]' ~/.dotfiles/packages/jupyter_lab.yml | xargs jupyter labextension install
# Server extension
for package in $(yq -r '.serverextension[]' ~/.dotfiles/packages/jupyter_lab.yml); do
    conda run --name=notebook jupyter serverextension enable --py "${package}"
done
